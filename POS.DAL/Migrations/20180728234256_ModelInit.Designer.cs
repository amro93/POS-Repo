// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.DAL.DBContexts;

namespace POS.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180728234256_ModelInit")]
    partial class ModelInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("POS.DAL.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<long?>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("POS.DAL.Models.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<long?>("LocationId");

                    b.Property<string>("LogoUrl");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<long>("Phone_1");

                    b.Property<long>("Phone_2");

                    b.Property<long>("Phone_3");

                    b.Property<long>("Phone_4");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("POS.DAL.Models.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("POS.DAL.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<long?>("ClientId");

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<long?>("SystemUserId");

                    b.Property<int?>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SystemUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("POS.DAL.Models.OrderProductQuantity", b =>
                {
                    b.Property<long>("ProductId");

                    b.Property<long>("OrderId");

                    b.Property<float>("Quantity");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("ProductQuantities");
                });

            modelBuilder.Entity("POS.DAL.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Age");

                    b.Property<string>("AlternativePhone");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int?>("Gender");

                    b.Property<string>("LastName");

                    b.Property<long?>("LocationId");

                    b.Property<string>("Mobile");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("POS.DAL.Models.Pricing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float?>("BuyingPrice");

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<float?>("SellingPrice");

                    b.Property<float?>("SpeacialSellingPrice");

                    b.Property<int?>("Unit");

                    b.HasKey("Id");

                    b.ToTable("Pricings");
                });

            modelBuilder.Entity("POS.DAL.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("EnterDate");

                    b.Property<long?>("EnteredById");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<long?>("ModifiedById");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Name");

                    b.Property<long?>("PricingId");

                    b.Property<long?>("ProductCategoryId");

                    b.Property<float>("StoreQuantity");

                    b.HasKey("Id");

                    b.HasIndex("EnteredById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PricingId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("POS.DAL.Models.ProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("POS.DAL.Models.ProductRetailer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<long?>("ProductId");

                    b.Property<long?>("RetailerId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RetailerId");

                    b.ToTable("ProductRetailers");
                });

            modelBuilder.Entity("POS.DAL.Models.Retailer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<long?>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("POS.DAL.Models.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<long?>("LocationId");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("POS.DAL.Models.StoreProductQuantity", b =>
                {
                    b.Property<long>("ProductId");

                    b.Property<long>("StoreId");

                    b.Property<float>("Quantity");

                    b.HasKey("ProductId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreProductQuantities");
                });

            modelBuilder.Entity("POS.DAL.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Magic");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<long?>("PersonId");

                    b.Property<string>("PhotoUrl");

                    b.Property<int>("Role");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("POS.DAL.Models.Client", b =>
                {
                    b.HasOne("POS.DAL.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("POS.DAL.Models.Company", b =>
                {
                    b.HasOne("POS.DAL.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("POS.DAL.Models.Order", b =>
                {
                    b.HasOne("POS.DAL.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId");

                    b.HasOne("POS.DAL.Models.User", "SystemUser")
                        .WithMany("Orders")
                        .HasForeignKey("SystemUserId");
                });

            modelBuilder.Entity("POS.DAL.Models.OrderProductQuantity", b =>
                {
                    b.HasOne("POS.DAL.Models.Order", "Order")
                        .WithMany("OrderProductQuantities")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("POS.DAL.Models.Product", "Product")
                        .WithMany("OrderProductQuantities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("POS.DAL.Models.Person", b =>
                {
                    b.HasOne("POS.DAL.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("POS.DAL.Models.Product", b =>
                {
                    b.HasOne("POS.DAL.Models.User", "EnteredBy")
                        .WithMany()
                        .HasForeignKey("EnteredById");

                    b.HasOne("POS.DAL.Models.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("POS.DAL.Models.Pricing", "Pricing")
                        .WithMany()
                        .HasForeignKey("PricingId");

                    b.HasOne("POS.DAL.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId");
                });

            modelBuilder.Entity("POS.DAL.Models.ProductRetailer", b =>
                {
                    b.HasOne("POS.DAL.Models.Product", "Product")
                        .WithMany("ProductRetailers")
                        .HasForeignKey("ProductId");

                    b.HasOne("POS.DAL.Models.Retailer", "Retailer")
                        .WithMany("ProductRetailers")
                        .HasForeignKey("RetailerId");
                });

            modelBuilder.Entity("POS.DAL.Models.Retailer", b =>
                {
                    b.HasOne("POS.DAL.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("POS.DAL.Models.Store", b =>
                {
                    b.HasOne("POS.DAL.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("POS.DAL.Models.StoreProductQuantity", b =>
                {
                    b.HasOne("POS.DAL.Models.Product", "Product")
                        .WithMany("StoreProductQuantities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("POS.DAL.Models.Store", "Store")
                        .WithMany("StoreProductQuantities")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("POS.DAL.Models.User", b =>
                {
                    b.HasOne("POS.DAL.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });
#pragma warning restore 612, 618
        }
    }
}
